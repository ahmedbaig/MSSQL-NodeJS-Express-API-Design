
CREATE DATABASE Cinepax
use Cinepax

CREATE TABLE CINEMA (
	SCREENNUMBER INT PRIMARY KEY
)
CREATE TABLE CINEMATIMINGS (
	SCREENNUMBER INT FOREIGN KEY REFERENCES CINEMA ,
	TIME VARCHAR (30)
)

INSERT INTO CINEMA VALUES (1), (2), (3), (4)
INSERT INTO CINEMATIMINGS VALUES (1, '09:15'), (1, '14:30'), (1, '17:00'), (1, '21:15'), (1, '00:00')
INSERT INTO CINEMATIMINGS VALUES (2, '09:15'), (2, '14:30'), (2, '17:00'), (2, '21:15')
INSERT INTO CINEMATIMINGS VALUES (3, '09:15'), (3, '14:30'), (3, '17:00')
INSERT INTO CINEMATIMINGS VALUES (4, '09:15'), (4, '14:30')
SELECT * FROM CINEMA INNER JOIN CINEMATIMINGS C ON CINEMA.SCREENNUMBER = C.SCREENNUMBER WHERE C.SCREENNUMBER = 1
SELECT CINEMA.SCREENNUMBER, TIME FROM CINEMATIMINGS INNER JOIN CINEMA ON CINEMATIMINGS.SCREENNUMBER = CINEMA.SCREENNUMBER

CREATE TABLE SEATCATEGORY(
	SEATNUMBER INT PRIMARY KEY IDENTITY (1,1),
	PRICE INT
)
BEGIN
  DECLARE @i INT = 1;
  WHILE @i <= 100
		BEGIN
   		INSERT SEATCATEGORY (PRICE) VALUES (1500);
    	SET @i = @i + 1;
		END
END
BEGIN
  DECLARE @i INT = 1;
  WHILE @i <= 150
		BEGIN
   		INSERT SEATCATEGORY (PRICE) VALUES (1000);
    	SET @i = @i + 1;
		END
END
BEGIN
  DECLARE @i INT = 1;
  WHILE @i <= 200
		BEGIN
   		INSERT SEATCATEGORY (PRICE) VALUES (500);
    	SET @i = @i + 1;
		END
END
SELECT * FROM SEATCATEGORY
SELECT * FROM SEATCATEGORY WHERE PRICE=1500

CREATE TABLE SEATCATEGORYMIXES (
	SEATNUMBER INT FOREIGN KEY REFERENCES SEATCATEGORY,
	SCREENNUMBER INT FOREIGN KEY REFERENCES CINEMA
)
DROP TABLE SEATCATEGORYMIXES
BEGIN
  DECLARE @i INT = 1;
  WHILE @i <= 450
		BEGIN
   		INSERT SEATCATEGORYMIXES (SEATNUMBER, SCREENNUMBER) VALUES (@i, 1);
    	SET @i = @i + 1;
		END
END
BEGIN
  DECLARE @i INT = 1;
  WHILE @i <= 450
		BEGIN
   		INSERT SEATCATEGORYMIXES (SEATNUMBER, SCREENNUMBER) VALUES (@i, 2);
    	SET @i = @i + 1;
		END
END
BEGIN
  DECLARE @i INT = 1;
  WHILE @i <= 450
		BEGIN
   		INSERT SEATCATEGORYMIXES (SEATNUMBER, SCREENNUMBER) VALUES (@i, 3);
    	SET @i = @i + 1;
		END
END
BEGIN
  DECLARE @i INT = 1;
  WHILE @i <= 450
		BEGIN
   		INSERT SEATCATEGORYMIXES (SEATNUMBER, SCREENNUMBER) VALUES (@i, 4);
    	SET @i = @i + 1;
		END
END
SELECT S.SEATNUMBER, SCREENNUMBER, PRICE FROM SEATCATEGORYMIXES INNER JOIN SEATCATEGORY S ON SEATCATEGORYMIXES.SEATNUMBER = S.SEATNUMBER
SELECT * FROM SEATCATEGORYMIXES

CREATE TABLE GOLDCATEGORY(
	SEATNUMBER INT FOREIGN KEY REFERENCES SEATCATEGORY,
	SEATTYPE VARCHAR(30)
)
DROP TABLE GOLDCATEGORY
TRUNCATE TABLE GOLDCATEGORY
BEGIN
  DECLARE @i INT = 1;
  WHILE @i <= 100
		BEGIN
   		INSERT GOLDCATEGORY (SEATNUMBER, SEATTYPE) VALUES (@i, 'GOLD');
    	SET @i = @i + 1;
		END
END

SELECT S.SEATNUMBER, SEATTYPE, S2.SCREENNUMBER, C2.TIME, PRICE FROM GOLDCATEGORY
	INNER JOIN SEATCATEGORY S ON GOLDCATEGORY.SEATNUMBER = S.SEATNUMBER
		INNER JOIN SEATCATEGORYMIXES S2 ON S.SEATNUMBER = S2.SEATNUMBER
			INNER JOIN CINEMA C ON S2.SCREENNUMBER = C.SCREENNUMBER
				INNER JOIN CINEMATIMINGS C2 ON C.SCREENNUMBER = C2.SCREENNUMBER
	WHERE S2.SCREENNUMBER = 1 AND TIME = '09:15'

SELECT * FROM GOLDCATEGORY
SELECT SEATTYPE, S.SEATNUMBER, PRICE FROM GOLDCATEGORY INNER JOIN SEATCATEGORY S ON GOLDCATEGORY.SEATNUMBER = S.SEATNUMBER

CREATE TABLE SILVERCATEGORY(
	SEATNUMBER INT FOREIGN KEY REFERENCES SEATCATEGORY,
	SEATTYPE VARCHAR(30)
)
BEGIN
  DECLARE @i INT = 1;
  WHILE @i <= 150
		BEGIN
   		INSERT SILVERCATEGORY (SEATNUMBER, SEATTYPE) VALUES (@i, 'SILVER');
    	SET @i = @i + 1;
		END
END
SELECT * FROM SILVERCATEGORY

CREATE TABLE REGULARCATEGORY(
	SEATNUMBER INT FOREIGN KEY REFERENCES SEATCATEGORY,
	SEATTYPE VARCHAR(30)
)
TRUNCATE TABLE REGULARCATEGORY
BEGIN
  DECLARE @i INT = 1;
  WHILE @i <= 200
		BEGIN
   		INSERT REGULARCATEGORY (SEATNUMBER, SEATTYPE) VALUES (@i, 'REGULAR');
    	SET @i = @i + 1;
		END
END
SELECT * FROM REGULARCATEGORY

CREATE TABLE MOVIES(
	MOVIEID INT PRIMARY KEY IDENTITY (1,1),
	MOVIENAME VARCHAR(100),
	MOVIETYPE VARCHAR(30),
	RATING FLOAT,
	RUNTIME VARCHAR(30),
	SCREANUMBER INT FOREIGN KEY REFERENCES CINEMA
)
DROP TABLE MOVIES
INSERT INTO MOVIES VALUES ('The Shawshank Redemption (1994)', '2D', 9.2, '1:50', 1)
INSERT INTO MOVIES VALUES (' The Lord of the Rings: The Fellowship of the Ring (2001)', '3D', 8.5, '3:00', 1)
INSERT INTO MOVIES VALUES ('Fight Club (1999)', '2D', 9.2, '2:50', 1)
INSERT INTO MOVIES VALUES ('Forrest Gump (1994)', '2D', 8.7, '1:30', 1)
INSERT INTO MOVIES VALUES (' Star Wars: Episode V - The Empire Strikes Back (1980)', '2D', 8.7, '2:50', 1)
INSERT INTO MOVIES VALUES ('The Godfather (1972)', '2D', 9.2, '2:30', 2)
INSERT INTO MOVIES VALUES (' Inception (2010)', '2D', 8.7, '2:00', 2)
INSERT INTO MOVIES VALUES (' Life Is Beautiful (1997)', '2D', 8.6, '2:40', 2)
INSERT INTO MOVIES VALUES (' Interstellar (2014)', '3D', 8.5, '2:00', 2)
INSERT INTO MOVIES VALUES ('The Dark Knight (2008)', '3D', 9.0, '2:30', 3)
INSERT INTO MOVIES VALUES (' The Pianist (2002)', '2D', 8.5, '1:30', 3)
INSERT INTO MOVIES VALUES ('Terminator 2 (1991)', '3D', 9.0, '2:30', 3)
INSERT INTO MOVIES VALUES (' The Lord of the Rings: The Return of the King (2003)', '3D', 8.9, '2:00', 4)
INSERT INTO MOVIES VALUES ('Whiplash (2014))', '2D', 8.5, '2:00', 4)
SELECT * FROM MOVIES

CREATE TABLE MOVIESEATS (
	MOVIEID INT FOREIGN KEY REFERENCES MOVIES,
	SEATNUMBER INT FOREIGN KEY REFERENCES SEATCATEGORY
)
BEGIN
  DECLARE @i INT = 1;
  WHILE @i <= 14 --movies
		BEGIN
			DECLARE @j INT = 1;
			WHILE @j <= 450 --seats
			BEGIN
   			INSERT MOVIESEATS (MOVIEID, SEATNUMBER) VALUES (@i, @j);
    		SET @j = @j + 1;
			END
			SET @i = @i + 1;
		END
END
SELECT G.SEATNUMBER, SEATTYPE, PRICE FROM MOVIESEATS
	INNER JOIN MOVIES ON MOVIESEATS.MOVIEID = MOVIES.MOVIEID
	INNER JOIN SEATCATEGORY S2 ON MOVIESEATS.SEATNUMBER = S2.SEATNUMBER
	INNER JOIN SILVERCATEGORY G ON S2.SEATNUMBER = G.SEATNUMBER
WHERE MOVIENAME = 'The Shawshank Redemption (1994)' AND SCREANUMBER = 1

UNION

SELECT G.SEATNUMBER, SEATTYPE, PRICE FROM MOVIESEATS
	INNER JOIN MOVIES ON MOVIESEATS.MOVIEID = MOVIES.MOVIEID
	INNER JOIN SEATCATEGORY S2 ON MOVIESEATS.SEATNUMBER = S2.SEATNUMBER
	INNER JOIN GOLDCATEGORY G ON S2.SEATNUMBER = G.SEATNUMBER
WHERE MOVIENAME = 'The Shawshank Redemption (1994)' AND SCREANUMBER = 1

UNION

SELECT G.SEATNUMBER, SEATTYPE, PRICE FROM MOVIESEATS
	INNER JOIN MOVIES ON MOVIESEATS.MOVIEID = MOVIES.MOVIEID
	INNER JOIN SEATCATEGORY S2 ON MOVIESEATS.SEATNUMBER = S2.SEATNUMBER
	INNER JOIN REGULARCATEGORY G ON S2.SEATNUMBER = G.SEATNUMBER
WHERE MOVIENAME = 'The Shawshank Redemption (1994)' AND SCREANUMBER = 1

CREATE TABLE SHOWTIME(
	MOVIEID INT FOREIGN KEY REFERENCES MOVIES,
	SCREENNUMBER INT FOREIGN KEY REFERENCES CINEMA,
	TIMING VARCHAR(30)
)
TRUNCATE TABLE SHOWTIME
INSERT INTO SHOWTIME VALUES (1, 1, '09:15')
INSERT INTO SHOWTIME VALUES (6, 2, '09:15')
INSERT INTO SHOWTIME VALUES (10, 3, '09:15')
INSERT INTO SHOWTIME VALUES (13, 4, '09:15')
INSERT INTO SHOWTIME VALUES (2, 1, '14:30')
INSERT INTO SHOWTIME VALUES (7, 2, '14:30')
INSERT INTO SHOWTIME VALUES (11, 3, '14:30')
INSERT INTO SHOWTIME VALUES (14, 4, '14:30')
INSERT INTO SHOWTIME VALUES (3, 1, '17:00')
INSERT INTO SHOWTIME VALUES (8, 2, '17:00')
INSERT INTO SHOWTIME VALUES (12, 3, '17:00')
INSERT INTO SHOWTIME VALUES (4, 1, '21:15')
INSERT INTO SHOWTIME VALUES (9, 2, '21:15')
INSERT INTO SHOWTIME VALUES (5, 1, '00:00')
SELECT * FROM SHOWTIME
SELECT SCREENNUMBER, M.MOVIEID, MOVIENAME, MOVIETYPE, RATING, RUNTIME, TIMING FROM SHOWTIME INNER JOIN MOVIES M ON M.MOVIEID = SHOWTIME.MOVIEID WHERE TIMING='09:15' AND SCREENNUMBER=1

CREATE TABLE SHOP(
	ITEMBUMBER INT PRIMARY KEY IDENTITY (1,1),
	PRICE MONEY,
	ITEM VARCHAR(30)
)
INSERT INTO SHOP VALUES (150, 'LARGE DRINK'), (200, 'LARGE POPCORN'), (200, 'LARGE LAYS'), (100, 'MEDIUM DRINK'), (150, 'MEDIUM POPCORN'), (150, 'MEDIUM LAYS'), (100, 'SMALL DRINK'), (100, 'SMALL POPCORN'), (100, 'SMALL LAYS')
SELECT * FROM SHOP

--USER FITTED DATA

CREATE TABLE CUSTOMER(
	CUSTOMERID INT PRIMARY KEY IDENTITY (1,1),
	NAME VARCHAR(30),
	PHONENYMBER INT,
	WALLET MONEY
)

CREATE TABLE PAYMENTOPTION(
	CUSTOMERID INT FOREIGN KEY REFERENCES CUSTOMER,
	PAYMENTNO INT PRIMARY KEY IDENTITY (1,1)
)

CREATE TABLE CREDIT_DEBITCARD(
	PAYMENTNO INT FOREIGN KEY REFERENCES PAYMENTOPTION,
	AMOUNT INT,
	TRANSACTIONO INT PRIMARY KEY IDENTITY (1,1)
)

CREATE TABLE CASH(
	PAYMENTNO INT FOREIGN KEY REFERENCES PAYMENTOPTION,
	AMOUNT INT
)

CREATE TABLE CONFECTIONERY(
	CUSTOMERID INT FOREIGN KEY REFERENCES CUSTOMER,
	QUANTITY INT,
	ITEMNUMBER INT FOREIGN KEY REFERENCES SHOP
)

CREATE TABLE BOOKING(
	CUSTOMERID INT FOREIGN KEY REFERENCES CUSTOMER,
	TIMES VARCHAR(30),
	SEATNUMBER INT FOREIGN KEY REFERENCES SEATCATEGORY,
	PRICE MONEY,
	BOOKNGID INT PRIMARY KEY IDENTITY (1,1),
	SEATTYPE VARCHAR(30),
	MOVIEID INT FOREIGN KEY REFERENCES MOVIES
)

--END USER FITTED DATA